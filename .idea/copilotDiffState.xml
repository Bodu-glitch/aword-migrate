<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/supabase/functions/get_questions/index.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/supabase/functions/get_questions/index.ts" />
              <option name="originalContent" value="// Follow this setup guide to integrate the Deno language server with your editor:&#10;// https://deno.land/manual/getting_started/setup_your_environment&#10;// This enables autocomplete, go to definition, etc.&#10;&#10;// Setup type definitions for built-in Supabase Runtime APIs&#10;import &quot;jsr:@supabase/functions-js/edge-runtime.d.ts&quot;&#10;&#10;console.log(&quot;Hello from Functions!&quot;)&#10;&#10;Deno.serve(async (req) =&gt; {&#10;  const { name } = await req.json()&#10;  const data = {&#10;    message: `Hello ${name}!`,&#10;  }&#10;  const { data, error } = await query&#10;  if (error) {&#10;    return new Response(JSON.stringify({ error: error.message }), { status: 500 })&#10;  }&#10;  return new Response(JSON.stringify({ questions: data }), {&#10;    headers: { &quot;Content-Type&quot;: &quot;application/json&quot; }&#10;  })&#10;})&#10;&#10;/* To invoke locally:&#10;&#10;  1. Run `supabase start` (see: https://supabase.com/docs/reference/cli/supabase-start)&#10;  2. Make an HTTP request:&#10;&#10;  curl -i --location --request POST 'http://127.0.0.1:54321/functions/v1/get_questions' \&#10;    --header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0' \&#10;    --header 'Content-Type: application/json' \&#10;    --data '{&quot;name&quot;:&quot;Functions&quot;}'&#10;&#10;*/&#10;" />
              <option name="updatedContent" value="// Follow this setup guide to integrate the Deno language server with your editor:&#10;// https://deno.land/manual/getting_started/setup_your_environment&#10;// This enables autocomplete, go to definition, etc.&#10;&#10;// Setup type definitions for built-in Supabase Runtime APIs&#10;import &quot;jsr:@supabase/functions-js/edge-runtime.d.ts&quot;&#10;&#10;console.log(&quot;Hello from Functions!&quot;)&#10;&#10;Deno.serve(async (req) =&gt; {&#10;  const { name } = await req.json()&#10;  const data = {&#10;    message: `Hello ${name}!`,&#10;  }&#10;  const { data, error } = await query&#10;  if (error) {&#10;    return new Response(JSON.stringify({ error: error.message }), { status: 500 })&#10;  }&#10;  return new Response(JSON.stringify({ questions: data }), {&#10;    headers: { &quot;Content-Type&quot;: &quot;application/json&quot; }&#10;  })&#10;})&#10;&#10;/* To invoke locally:&#10;&#10;  1. Run `supabase start` (see: https://supabase.com/docs/reference/cli/supabase-start)&#10;  2. Make an HTTP request:&#10;&#10;  curl -i --location --request POST 'http://127.0.0.1:54321/functions/v1/get_questions' \&#10;    --header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0' \&#10;    --header 'Content-Type: application/json' \&#10;    --data '{&quot;name&quot;:&quot;Functions&quot;}'&#10;&#10;*/" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/supabase/migrations/20250926100015_dummy.sql">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/supabase/migrations/20250926100015_dummy.sql" />
              <option name="originalContent" value="insert into public.roots (id, root_code, root_meaning)&#10;values&#10;    (gen_random_uuid(), 'ad-, a-', 'hướng đến(ai), tác động vào(ai)'),&#10;    (gen_random_uuid(), 'inter-, dia-, per-', 'khoảng giữa, thông qua'),&#10;    (gen_random_uuid(), 'sur-, super-, trans', 'phía trên, vượt qua'),&#10;    (gen_random_uuid(), 'pre-, pro-', 'phía trước'),&#10;    (gen_random_uuid(), 'e(x)-, extr(a)-', 'ngoài, vượt qua'),&#10;    (gen_random_uuid(), 'co-, con-, com-', 'cùng, hoàn toàn, đầy đủ'),&#10;    (gen_random_uuid(), 'in-, en-, em-', 'bên trong, hoàn toàn, đầy đủ'),&#10;    (gen_random_uuid(), 'in-, un-, a-', 'không'),&#10;    (gen_random_uuid(), 'de-, sub-', 'bên dưới'),&#10;    (gen_random_uuid(), 're-', 'lại, phía sau, một cách toàn diện'),&#10;    (gen_random_uuid(), 'ab(ad)-, dis-', 'cách xa khỏi đâu, không'),&#10;    (gen_random_uuid(), 'sacr-, saint-, sanct-', 'thần thánh'),&#10;    (gen_random_uuid(), 'pri(m)-, pri(n)-', 'đầu tiên, phía trước, trước'),&#10;    (gen_random_uuid(), 'alter-, ali-', 'khác biệt'),&#10;    (gen_random_uuid(), 'amb', 'vùng xung quanh, hai phía'),&#10;    (gen_random_uuid(), 'bene-, bono-', 'tốt'),&#10;    (gen_random_uuid(), 'mag-, may-, maj-, max-', 'to'),&#10;    (gen_random_uuid(), 'mal-', 'xấu'),&#10;    (gen_random_uuid(), 'micro', 'nhỏ, vi mô'),&#10;    (gen_random_uuid(), 'mater-, metro-', 'mẹ, vật chất'),&#10;    (gen_random_uuid(), 'gli-, gla-, glo-', 'toả sáng'),&#10;    (gen_random_uuid(), 'wr-, war-, wor-', 'vặn, uốn cong'),&#10;    (gen_random_uuid(), 'ac(u)-, acer-, acro-', 'kim, sắc bén, cao chót vót'),&#10;    (gen_random_uuid(), 'phil(e)-', 'yêu, thích');&#10;&#10;with r1 as (&#10;    select id as root_id from public.roots where root_code = 'ad-, a-' limit 1&#10;)&#10;insert into public.vocab (id, root_id, word, prefix, infix, postfix, prefix_meaning, infix_meaning, postfix_meaning, phonetic)&#10;values&#10;    (gen_random_uuid(), (select root_id from r1), 'administer', 'ad', 'minister', '', 'hướng đến', 'bộ trưởng', '', '/ədˈmɪn.ɪ.stər/'),&#10;    (gen_random_uuid(), (select root_id from r1), 'adverb', 'ad', 'verb', '', 'hướng đến', 'động từ', '', '/ˈæd.vɜːb/'),&#10;    (gen_random_uuid(), (select root_id from r1), 'amaze', 'a', 'maze', '', 'hướng đến', 'mê cung', '', '/əˈmeɪz/');&#10;&#10;insert into public.vocab_senses (id, vocab_id, word, pos, definition,  sense_order)&#10;values&#10;    (gen_random_uuid(), (select id from public.vocab where word = 'administer' limit 1), 'administer', 'n',&#10;    'Quản lí, chấp hành, phục vụ', 0),&#10;    (gen_random_uuid(), (select id from public.vocab where word = 'administer' limit 1), 'administration', 'n',&#10;    'Hành chính, quản lí, chủ quyền, chính quyền', 1),&#10;    (gen_random_uuid(), (select id from public.vocab where word = 'administer' limit 1), 'administrative', 'adj',&#10;    '(thuộc) hành chính, (thuộc) quản lí', 2),&#10;    (gen_random_uuid(), (select id from public.vocab where word = 'adverb' limit 1), 'adverb', 'n',&#10;    'Phó từ', 0),&#10;    (gen_random_uuid(), (select id from public.vocab where word = 'amaze' limit 1), 'amaze', 'v',&#10;    'Làm kinh ngạc', 0),&#10;    (gen_random_uuid(), (select id from public.vocab where word = 'amaze' limit 1), 'amazing', 'adj',&#10;    'Đáng ngạc nhiên, kì thú', 1),&#10;    (gen_random_uuid(), (select id from public.vocab where word = 'amaze' limit 1), 'amazement', 'n',&#10;    'Sự kinh ngạc, sự sửng sốt', 2);&#10;&#10;insert into public.vocab_examples (id, vocab_id, example_en, example_vi, example_order)&#10;values&#10;    (gen_random_uuid(), (select id from public.vocab where word = 'administer' limit 1), 'The teacher administered corporal punishment.', 'Giáo viên đó đã thực hiện một hình phạt về thể xác.', 0);&#10;" />
              <option name="updatedContent" value="insert into public.roots (id, root_code, root_meaning)&#10;values&#10;    (gen_random_uuid(), 'ad-, a-', 'hướng đến(ai), tác động vào(ai)'),&#10;    (gen_random_uuid(), 'inter-, dia-, per-', 'khoảng giữa, thông qua'),&#10;    (gen_random_uuid(), 'sur-, super-, trans', 'phía trên, vượt qua'),&#10;    (gen_random_uuid(), 'pre-, pro-', 'phía trước'),&#10;    (gen_random_uuid(), 'e(x)-, extr(a)-', 'ngoài, vượt qua'),&#10;    (gen_random_uuid(), 'co-, con-, com-', 'cùng, hoàn toàn, đầy đủ'),&#10;    (gen_random_uuid(), 'in-, en-, em-', 'bên trong, hoàn toàn, đầy đủ'),&#10;    (gen_random_uuid(), 'in-, un-, a-', 'không'),&#10;    (gen_random_uuid(), 'de-, sub-', 'bên dưới'),&#10;    (gen_random_uuid(), 're-', 'lại, phía sau, một cách toàn diện'),&#10;    (gen_random_uuid(), 'ab(ad)-, dis-', 'cách xa khỏi đâu, không'),&#10;    (gen_random_uuid(), 'sacr-, saint-, sanct-', 'thần thánh'),&#10;    (gen_random_uuid(), 'pri(m)-, pri(n)-', 'đầu tiên, phía trước, trước'),&#10;    (gen_random_uuid(), 'alter-, ali-', 'khác biệt'),&#10;    (gen_random_uuid(), 'amb', 'vùng xung quanh, hai phía'),&#10;    (gen_random_uuid(), 'bene-, bono-', 'tốt'),&#10;    (gen_random_uuid(), 'mag-, may-, maj-, max-', 'to'),&#10;    (gen_random_uuid(), 'mal-', 'xấu'),&#10;    (gen_random_uuid(), 'micro', 'nhỏ, vi mô'),&#10;    (gen_random_uuid(), 'mater-, metro-', 'mẹ, vật chất'),&#10;    (gen_random_uuid(), 'gli-, gla-, glo-', 'toả sáng'),&#10;    (gen_random_uuid(), 'wr-, war-, wor-', 'vặn, uốn cong'),&#10;    (gen_random_uuid(), 'ac(u)-, acer-, acro-', 'kim, sắc bén, cao chót vót'),&#10;    (gen_random_uuid(), 'phil(e)-', 'yêu, thích');&#10;&#10;with r1 as (&#10;    select id as root_id from public.roots where root_code = 'ad-, a-' limit 1&#10;)&#10;insert into public.vocab (id, root_id, word, prefix, infix, postfix, prefix_meaning, infix_meaning, postfix_meaning, phonetic)&#10;values&#10;    (gen_random_uuid(), (select root_id from r1), 'administer', 'ad', 'minister', '', 'hướng đến', 'bộ trưởng', '', '/ədˈmɪn.ɪ.stər/'),&#10;    (gen_random_uuid(), (select root_id from r1), 'adverb', 'ad', 'verb', '', 'hướng đến', 'động từ', '', '/ˈæd.vɜːb/'),&#10;    (gen_random_uuid(), (select root_id from r1), 'amaze', 'a', 'maze', '', 'hướng đến', 'mê cung', '', '/əˈmeɪz/');&#10;&#10;insert into public.vocab_senses (id, vocab_id, word, pos, definition,  sense_order)&#10;values&#10;    (gen_random_uuid(), (select id from public.vocab where word = 'administer' limit 1), 'administer', 'n',&#10;    'Quản lí, chấp hành, phục vụ', 0),&#10;    (gen_random_uuid(), (select id from public.vocab where word = 'administer' limit 1), 'administration', 'n',&#10;    'Hành chính, quản lí, chủ quyền, chính quyền', 1),&#10;    (gen_random_uuid(), (select id from public.vocab where word = 'administer' limit 1), 'administrative', 'adj',&#10;    '(thuộc) hành chính, (thuộc) quản lí', 2),&#10;    (gen_random_uuid(), (select id from public.vocab where word = 'adverb' limit 1), 'adverb', 'n',&#10;    'Phó từ', 0),&#10;    (gen_random_uuid(), (select id from public.vocab where word = 'amaze' limit 1), 'amaze', 'v',&#10;    'Làm kinh ngạc', 0),&#10;    (gen_random_uuid(), (select id from public.vocab where word = 'amaze' limit 1), 'amazing', 'adj',&#10;    'Đáng ngạc nhiên, kì thú', 1),&#10;    (gen_random_uuid(), (select id from public.vocab where word = 'amaze' limit 1), 'amazement', 'n',&#10;    'Sự kinh ngạc, sự sửng sốt', 2);&#10;&#10;insert into public.vocab_examples (id, vocab_id, example_en, example_vi, example_order)&#10;values&#10;    (gen_random_uuid(), (select id from public.vocab where word = 'administer' limit 1), 'The teacher administered corporal punishment.', 'Giáo viên đó đã thực hiện một hình phạt về thể xác.', 0);&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>